cargo-features = ["profile-rustflags", "codegen-backend"]
[package]
name = "gupaxx"
version = "1.11.0-rc4"
authors = ["cyrix126 <gupaxx@baermail.fr>"]
description = "Fork of Gupax integrating the XMRvsBeast Raffle "
documentation = "https://github.com/cyrix126/gupaxx"
edition = "2024"

[profile.release]
panic = "abort"
lto = "fat"
codegen-units = 1
incremental = false
strip = "symbols"
rustflags = ["-Zlocation-detail=none"]

[profile.dev]
# can induce issue when using rust-analyzer, but allows smaller dev build time
# codegen-backend = "cranelift"

[features]
default = []
bundle = []
distro = []
log=[]

[dependencies]
clap = {version="4.5", features=["cargo", "derive"]}
anyhow = "1.0.99"
benri = "0.1.12"
bytes = "1.10.1"
dirs = "6.0.0"
#--------------------------------------------------------------------------------
egui = "0.32"
## wgpu requireed for egui 0.32
wgpu = "25.0.2"
# egui = {git="https://github.com/emilk/egui"}
egui_extras = {version="0.32", features = ["image"] }
# egui_extras = {git="https://github.com/emilk/egui", features = ["image"] }

## 2023-12-28: https://github.com/hinto-janai/gupax/issues/68
##
## 2024-03-18: Both `glow` and `wgpu` seem to crash:
## <https://github.com/hinto-janai/gupax/issues/84>
## `wgpu` seems to crash on less computers though so...

## 2023-02-06: The below gets fixed by using the [wgpu] backend instead of [glow]
## It also fixes crashes on CPU-based graphics. Only used for Windows.
## Using [wgpu] actually crashes macOS (fixed in 0.20.x though).

#--------------------------------------------------------------------------------
env_logger = "0.11.8"
figment = { version = "0.10.19", features = ["toml"] }
reqwest = {version = "0.12.23", default-features=false, features=["json", "rustls-tls"]}
reqwest-middleware = "0.4"
reqwest-retry = "0.7"
image = { version = "0.25.6", features = ["png"] }
log = "0.4.27"
num-format = { version = "0.4.4", default-features = false }
once_cell = "1.21.3"
rand = "0.9.2"
regex = { version = "1.11.1", default-features = false, features = ["perf"] }
rfd = "0.15.4"
serde = { version = "1.0.219", features = ["rc", "derive"] }
serde_json = "1.0.143"
sysinfo = { version = "0.37", default-features = false, features=["system"] }
# tls-api = "0.9.0"
tokio = { version = "1.47.1", features = ["rt", "time", "macros", "process", "rt-multi-thread"] }
toml = { version = "0.9.5", features = ["preserve_order"] }
walkdir = "2.5.0"
zeroize = "1.8.1"
strsim = "0.11.1"
strip-ansi-escapes = "0.2.1"
derive_more = {version="2.0.1", default-features=false, features=["display", "deref", "deref_mut"]}
serde-this-or-that = "0.5.0"
readable = "0.16"
chrono = {version="0.4.41", default-features=false, features=["clock", "std"]}
enclose = "1.2.1"
bounded-vec-deque = {version="0.1.1", default-features=false}
cfg-if = "1.0"
flexi_logger = "0.31"
eframe = {version="0.32", features=["wgpu"]}
# eframe = {git="https://github.com/emilk/egui", features=["wgpu"]}
strum = {version="0.27", features=["derive"]}
## force version of ring to prevent https://rustsec.org/advisories/RUSTSEC-2025-0009
ring = "0.17.14"
## get local ip
local-ip-address = "0.6"
## get public ip
public-ip = {git="https://github.com/Cyrix126/rust-public-ip"}
## check if port open
port_check = "0.3"
## node crawler
monero-crawler-lib = {git="https://github.com/Cyrix126/monero-crawler-rs", features=["rpc", "zmq"]}
futures = "0.3"
## find ports used by a local monerod
listeners = "0.3"
# Unix dependencies
[target.'cfg(unix)'.dependencies]
tar = "0.4.44"
flate2 = "1.1"
sudo = "0.6.0"
# https://github.com/emilk/egui/releases/tag/0.30.0 see breaking change
eframe = {version="0.32", features=["x11", "wayland"]}
portable-pty = "0.9.0"
# macOS
[target.'cfg(target_os = "macos")'.dependencies]
[dev-dependencies]
egui = {version="0.32", features=["callstack"]}
# egui = {git="https://github.com/emilk/egui", features=["callstack"]}

# [target.'cfg(not(target_os = "macos"))'.dependencies]
# tls-api-native-tls = "0.9.0"

# Windows dependencies
[target.'cfg(windows)'.dependencies]
# glow start on windows but not wgpu
# need the same version that eframe is using with egui_wgpu
# feature angle to enable support for old cpu on Windows
wgpu = {version = "25.0.2", features=["angle"]}
zip = "4.3.0"
is_elevated = "0.1.2"
## portable-pty upgrade on 0.9 will break terminals on windows 
portable-pty = "0.9.0"

# For Windows build (icon)
[target.'cfg(windows)'.build-dependencies]
winres = "0.1.12"
static_vcruntime = "2.0"

# For macOS build (cargo-bundle)
[package.metadata.bundle]
name = "Gupaxx"
identifier = "com.github.cyrix126.gupaxx"
icon = ["images/icons/icon@2x.png"]
category = "public.app-category.utilities"

## Clippy
[lints.clippy]
result_large_err = "allow"
