cargo-features = ["profile-rustflags"]
[package]
name = "gupaxx"
version = "1.2.0"
authors = ["cyrix126 <gupaxx@baermail.fr>"]
description = "Fork of Gupax integrating the XMRvsBeast Raffle "
documentation = "https://github.com/cyrix126/gupaxx"
edition = "2021"

[profile.release]
panic = "abort"
lto = "fat"
codegen-units = 1
incremental = false
strip = "symbols"
rustflags = ["-Zlocation-detail=none"]

[profile.dev]
opt-level = 1
debug = true
strip = "none"
debug-assertions = true
overflow-checks = true
incremental = true

[features]
default = []
bundle = []
distro = []

[dependencies]
clap = {version="4.5", features=["cargo", "derive"]}
anyhow = "1.0.86"
benri = "0.1.12"
bytes = "1.6.1"
dirs = "5.0.1"
#--------------------------------------------------------------------------------
egui = "0.27.2"
egui_extras = { version = "0.27.2", features = ["image"] }
## 2023-12-28: https://github.com/hinto-janai/gupax/issues/68
##
## 2024-03-18: Both `glow` and `wgpu` seem to crash:
## <https://github.com/hinto-janai/gupax/issues/84>
## `wgpu` seems to crash on less computers though so...

## 2023-02-06: The below gets fixed by using the [wgpu] backend instead of [glow]
## It also fixes crashes on CPU-based graphics. Only used for Windows.
## Using [wgpu] actually crashes macOS (fixed in 0.20.x though).

#--------------------------------------------------------------------------------
env_logger = "0.11.4"
figment = { version = "0.10.19", features = ["toml"] }
reqwest = {version = "0.12.5", default-features=false, features=["json", "rustls-tls"]}
image = { version = "0.25.2", features = ["png"] }
log = "0.4.22"
num-format = { version = "0.4.4", default-features = false }
once_cell = "1.19.0"
portable-pty = "0.8.1"
rand = "0.8.5"
regex = { version = "1.10.5", default-features = false, features = ["perf"] }
rfd = "0.14.1"
serde = { version = "1.0.204", features = ["rc", "derive"] }
serde_json = "1.0.120"
sysinfo = { version = "0.30.13", default-features = false }
# tls-api = "0.9.0"
tokio = { version = "1.39.1", features = ["rt", "time", "macros", "process", "rt-multi-thread"] }
toml = { version = "0.8.15", features = ["preserve_order"] }
walkdir = "2.5.0"
zeroize = "1.8.1"
strsim = "0.11.1"
strip-ansi-escapes = "0.2.0"
derive_more = {version="0.99.18", default-features=false, features=["display"]}
serde-this-or-that = "0.4.2"
readable = "0.16"
chrono = {version="0.4.38", default-features=false, features=["clock", "std"]}
enclose = "1.2.0"
bounded-vec-deque = {version="0.1.1", default-features=false}
cfg-if = "1.0"
flexi_logger = "0.28"
# Unix dependencies
[target.'cfg(unix)'.dependencies]
eframe = { version = "0.27.2", features = ["wgpu"] }
tar = "0.4.41"
flate2 = "1.0"
sudo = "0.6.0"
# macOS
[target.'cfg(target_os = "macos")'.dependencies]
eframe = { version = "0.27.2", features = ["wgpu"] }
# On apple-darwin targets there is an issue with the native and rustls
# tls implementation so this makes it fall back to the openssl variant.
#
# https://gitlab.torproject.org/tpo/core/arti/-/issues/715
# tls-api-openssl = "0.9.0"
# `arti-client` with `static` doesn't actually
# statically link OpenSSL on macOS, both x64 + ARM.
# Should probably file a bug report.
# openssl = { version = "0.10", features = ["vendored"] }
# We don't even use `xz` in `flate2` but this gets dynamically
# linked as well which causes problems, so statically link it.
lzma-sys = { version = "0.1", features = ["static"] }
[dev-dependencies]
egui = {version = "0.27.2", features=["callstack"]}

# [target.'cfg(not(target_os = "macos"))'.dependencies]
# tls-api-native-tls = "0.9.0"

# Windows dependencies
[target.'cfg(windows)'.dependencies]
# glow start on windows but not wgpu
eframe = { version = "0.27.2", features = ["wgpu"] }
# need the same version that eframe is using with egui_wgpu
# feature angle to enable support for old cpu on Windows
wgpu = {version = "0.19.4", features=["angle"]}
zip = "2.1.5"
is_elevated = "0.1.2"

# For Windows build (icon)
[target.'cfg(windows)'.build-dependencies]
winres = "0.1.12"
static_vcruntime = "2.0"

# For macOS build (cargo-bundle)
[package.metadata.bundle]
name = "Gupaxx"
identifier = "com.github.cyrix126.gupaxx"
icon = ["images/icons/icon@2x.png"]
category = "public.app-category.utilities"
